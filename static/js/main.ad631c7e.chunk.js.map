{"version":3,"sources":["components/inputPrompt.js","components/zeigerdiagramm.js","components/spannung-zeitdiagramm.js","components/spannungsListe.js","App.js","reportWebVitals.js","index.js"],"names":["InputPrompt","props","useState","real","undefined","imaginary","frequency","absolute","angle","state","setState","className","style","height","type","placeholder","value","onChange","e","prev","target","onClick","console","log","dispatch","ACTIONS","SET_FREQUENCY","payload","ADD_ZEIGER","Math","PI","Zeigerdiagramm","maxBetrag","d3","store","zeigerarray","zeiger","scaleReal","domain","range","scaleImaginary","realAxis","scale","imaginaryAxis","svg","useRef","useEffect","remove","append","attr","call","width","map","index","motion","div","initial","rotate","animate","top","left","backgroundColor","color","transformOrigin","borderTop","borderBottom","borderLeft","transform","nummer","id","ref","SpannungZeitdiagramm","scaleSpannung","spannungAxis","zeitSVG","scaleTime","current","getBoundingClientRect","timeAxis","sine","t","sin","line","context","x","d","y","roundToX","num","X","isNaN","round","SpannungsListe","gridTemplateColumns","Fragment","xmlns","fill","viewBox","DELETE_ZEIGER","fillRule","RESET","palette","distinctColors","count","App","useReducer","action","zeigernummer","d3max","sqrt","atan","hex","parseFloat","cos","indexToDelete","newZeigerArray","splice","frequenz","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad631c7e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ACTIONS } from \"./../App.js\";\r\n\r\nexport default function InputPrompt(props) {\r\n  const [state, setState] = useState({\r\n    real: undefined,\r\n    imaginary: undefined,\r\n    frequency: 50,\r\n    absolute: undefined,\r\n    angle: undefined,\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center mb-10 items-center\">\r\n      <h2 className=\"text-l md:text-2xl mb-5 my-3\">\r\n        Eingabe von Wechselgrößen:\r\n      </h2>\r\n      <ul className=\"grid grid-cols-5 list-none justify-center items-center max-w-xl\">\r\n        <h3\r\n          className=\"col-span-2 md:text-2xl align-middle\"\r\n          style={{ height: \"min-content\" }}\r\n        >\r\n          Frequenz:\r\n        </h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"in Hz\"\r\n          value={state.frequency}\r\n          className=\"p-2 h-5/6 bg-gray-900 hover:bg-gray-700\"\r\n          onChange={(e) => {\r\n            setState((prev) => ({ ...prev, frequency: e.target.value }));\r\n          }}\r\n        ></input>\r\n        <span className=\"md:text-2xl align-middle\">Hz</span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"md:ml-5 input-btn p-2\"\r\n          onClick={() => {\r\n            console.log(state);\r\n            props.dispatch({\r\n              type: ACTIONS.SET_FREQUENCY,\r\n              payload: state.frequency,\r\n            });\r\n          }}\r\n        >\r\n          Ändern\r\n        </button>\r\n        <h3 className=\"mb-4 md:text-xl md:mt-2 col-span-5\">\r\n          In der Komponentenform:\r\n        </h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Realteil\"\r\n          className=\"p-2 h-5/6 bg-gray-900 hover:bg-gray-700\"\r\n          onChange={(e) => {\r\n            setState((prev) => ({ ...prev, real: e.target.value }));\r\n          }}\r\n        ></input>\r\n        <span className=\"m-2\">+</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Imaginärteil\"\r\n          className=\"p-2 h-5/6 bg-gray-900 hover:bg-gray-700\"\r\n          onChange={(e) => {\r\n            setState((prev) => ({ ...prev, imaginary: e.target.value }));\r\n          }}\r\n        ></input>\r\n        <span className=\"m-2\">* i</span>\r\n        <button\r\n          type=\"button\"\r\n          className=\"md:ml-5 input-btn p-2\"\r\n          onClick={() => {\r\n            console.log(state);\r\n            props.dispatch({\r\n              type: ACTIONS.ADD_ZEIGER,\r\n              payload: {\r\n                type: \"kartesisch\",\r\n                real: state.real,\r\n                imaginary: state.imaginary,\r\n              },\r\n            });\r\n            props.dispatch({\r\n              type: ACTIONS.SET_FREQUENCY,\r\n              payload: state.frequency,\r\n            });\r\n          }}\r\n        >\r\n          Eingabe\r\n        </button>\r\n        <h3 className=\"mb-4 md:mt-2 md:text-xl col-span-5\">\r\n          In der Polarform:\r\n        </h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Betrag\"\r\n          className=\"p-2 h-5/6 bg-gray-900 hover:bg-gray-700\"\r\n          onChange={(e) => {\r\n            setState((prev) => ({ ...prev, absolute: e.target.value }));\r\n          }}\r\n        ></input>\r\n        <span className=\"m-2\">&amp;</span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Winkel in Grad\"\r\n          className=\"p-2 h-5/6 bg-gray-900 hover:bg-gray-700 col-span-2\"\r\n          onChange={(e) => {\r\n            setState((prev) => ({\r\n              ...prev,\r\n              angle: (e.target.value * Math.PI) / 180,\r\n            }));\r\n          }}\r\n        ></input>\r\n        <button\r\n          type=\"button\"\r\n          className=\"md:ml-5 input-btn p-2\"\r\n          onClick={() => {\r\n            console.log(state);\r\n            props.dispatch({\r\n              type: ACTIONS.ADD_ZEIGER,\r\n              payload: {\r\n                type: \"polar\",\r\n                absolute: state.absolute,\r\n                angle: state.angle,\r\n              },\r\n            });\r\n            props.dispatch({\r\n              type: ACTIONS.SET_FREQUENCY,\r\n              payload: state.frequency,\r\n            });\r\n          }}\r\n        >\r\n          Eingabe\r\n        </button>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport default function Zeigerdiagramm(props) {\r\n  const maxBetrag = d3.max(\r\n    props.store.zeigerarray,\r\n    (zeiger) => zeiger.absolute\r\n  );\r\n\r\n  const scaleReal = d3\r\n    .scaleLinear()\r\n    .domain([-1 * maxBetrag - maxBetrag * 0.1, maxBetrag + maxBetrag * 0.1])\r\n    .range([0, 600]);\r\n\r\n  // console.log(\"maxBetrag\", typeof maxBetrag);\r\n  // console.log(\"realScaleDomain\", [maxBetrag + maxBetrag * 0.1]);\r\n\r\n  const scaleImaginary = d3\r\n    .scaleLinear()\r\n    .domain([maxBetrag + maxBetrag * 0.1, -1 * maxBetrag - maxBetrag * 0.1])\r\n    .range([0, 600]);\r\n\r\n  const realAxis = d3.axisBottom().scale(scaleReal);\r\n  const imaginaryAxis = d3.axisLeft().scale(scaleImaginary);\r\n  const svg = useRef(null);\r\n\r\n  useEffect(() => {\r\n    d3.selectAll(\".axis-zeiger\").remove();\r\n\r\n    d3.select(\"#zeiger-svg\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis-zeiger\")\r\n      .attr(\"transform\", \"translate(0, 300)\")\r\n      .call(realAxis);\r\n    d3.select(\"#zeiger-svg\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis-zeiger\")\r\n      .attr(\"transform\", \"translate(300, 0)\")\r\n      .call(imaginaryAxis);\r\n  }, [props.store, imaginaryAxis, realAxis]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center mb-20\">\r\n      <div className=\"relative\" style={{ width: 600, height: 600 }}>\r\n        {props.store.zeigerarray.map((zeiger, index) => {\r\n          return (\r\n            <motion.div\r\n              initial={{ rotate: `0rad` }}\r\n              animate={{ rotate: `-${zeiger.angle}rad` }}\r\n              // transition={{ duration: 1, repeat: Infinity }}\r\n              className=\"absolute\"\r\n              style={{\r\n                width: scaleReal(zeiger.absolute) - 300,\r\n                top: 297.5,\r\n                left: 300,\r\n                height: 5,\r\n                backgroundColor: zeiger.color,\r\n                transformOrigin: \"left\",\r\n                // transform: `rotate(${-zeiger.angle}rad)`,\r\n              }}\r\n              key={index}\r\n            >\r\n              <div\r\n                className=\"absolute right-0\"\r\n                style={{\r\n                  width: 0,\r\n                  height: 0,\r\n                  borderTop: \"15px solid transparent\",\r\n                  borderBottom: \"15px solid transparent\",\r\n                  borderLeft: `25px solid ${zeiger.color}`,\r\n                  transform: \"translate(3.5px, -12.5px)\",\r\n                }}\r\n              ></div>\r\n              <div\r\n                className=\"absolute right-0 -top-14 font-bold text-2xl\"\r\n                style={{\r\n                  transform: `rotate(${zeiger.angle}rad)`,\r\n                  color: zeiger.color,\r\n                }}\r\n              >\r\n                <u>U</u>\r\n                <sub>{zeiger.nummer}</sub>\r\n              </div>\r\n            </motion.div>\r\n          );\r\n        })}\r\n        <svg id=\"zeiger-svg\" height=\"600px\" width=\"600px\" ref={svg}></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default function SpannungZeitdiagramm(props) {\r\n  const maxBetrag = d3.max(\r\n    props.store.zeigerarray,\r\n    (zeiger) => zeiger.absolute\r\n  );\r\n\r\n  const svgHeight = 600;\r\n  const svgPadding = 50;\r\n  const viewedTime = 0.02;\r\n  const frequency = props.store.frequency; // in ms\r\n\r\n  const scaleSpannung = d3\r\n    .scaleLinear()\r\n    .domain([-1 * maxBetrag - maxBetrag * 0.1, maxBetrag + maxBetrag * 0.1])\r\n    .range([600, 0]);\r\n\r\n  const spannungAxis = d3.axisLeft().scale(scaleSpannung);\r\n\r\n  const zeitSVG = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scaleTime = d3\r\n      .scaleLinear()\r\n      .domain([0, viewedTime])\r\n      .range([svgPadding, zeitSVG.current.getBoundingClientRect().width]);\r\n\r\n    const timeAxis = d3.axisBottom().scale(scaleTime);\r\n\r\n    d3.selectAll(\".axis-spannung\").remove();\r\n    d3.selectAll(\".spannung-zeit-path\").remove();\r\n\r\n    d3.select(\"#spannung-svg\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis-spannung\")\r\n      .attr(\"transform\", `translate(0, 300)`)\r\n      .call(timeAxis);\r\n\r\n    d3.select(\"#spannung-svg\")\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis-spannung\")\r\n      .attr(\"transform\", `translate(${svgPadding}, 0)`)\r\n      .call(spannungAxis);\r\n\r\n    for (let zeiger of props.store.zeigerarray) {\r\n      const sine = d3.range(0, viewedTime, 0.0001).map((t) => {\r\n        return [\r\n          t,\r\n          zeiger.absolute *\r\n            Math.sin(2 * Math.PI * frequency * t + zeiger.angle),\r\n        ];\r\n      });\r\n\r\n      const line = d3\r\n        .line()\r\n        .context(null)\r\n        .x(function (d) {\r\n          return scaleTime(d[0]);\r\n        })\r\n        .y(function (d) {\r\n          return scaleSpannung(d[1]);\r\n        });\r\n\r\n      d3.select(\"#spannung-svg\")\r\n        .append(\"g\")\r\n        .attr(\"class\", \"spannung-zeit-path\")\r\n        .append(\"path\")\r\n        .attr(\"d\", line(sine))\r\n        .attr(\"stroke\", zeiger.color)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke-width\", \"5\");\r\n    }\r\n  }, [props.store, frequency, scaleSpannung, spannungAxis]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <svg\r\n        id=\"spannung-svg\"\r\n        className=\"w-full\"\r\n        height={svgHeight}\r\n        ref={zeitSVG}\r\n      ></svg>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ACTIONS } from \"./../App.js\";\r\n\r\nconst roundToX = (num = 0, X = 20) =>\r\n  isNaN(+(Math.round(num + `e${X}`) + `e-${X}`))\r\n    ? 0\r\n    : +(Math.round(num + `e${X}`) + `e-${X}`);\r\n\r\nexport default function SpannungsListe(props) {\r\n  return (\r\n    <div className=\"my-10\">\r\n      <ul\r\n        className=\"grid w-full gap-y-2\"\r\n        style={{ gridTemplateColumns: \"1fr 1fr 1fr 1fr min-content\" }}\r\n      >\r\n        <strong>Zeigernummer</strong>\r\n        <span>Spitzenspannung in Volt</span>\r\n        <span>Winkel in Grad</span>\r\n        <span>Komponentendarstellung</span>\r\n        <span className=\"w-8\"></span>\r\n        {props.store.zeigerarray.map((zeiger) => {\r\n          return (\r\n            <React.Fragment key={zeiger.nummer}>\r\n              <strong>\r\n                <u>U</u>\r\n                <sub>{zeiger.nummer}</sub>\r\n              </strong>\r\n              <span>{roundToX(zeiger.absolute, 4)} V</span>\r\n              <span>{roundToX((zeiger.angle * 180) / Math.PI, 3)}</span>\r\n              <span>\r\n                {roundToX(zeiger.real, 3)} + {roundToX(zeiger.imaginary, 3)} * i\r\n              </span>\r\n              <span className=\"w-8\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"rounded-xl p-1 cursor-pointer input-btn\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  onClick={() => {\r\n                    props.dispatch({\r\n                      type: ACTIONS.DELETE_ZEIGER,\r\n                      payload: zeiger.nummer,\r\n                    });\r\n                  }}\r\n                >\r\n                  <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                  />\r\n                </svg>\r\n              </span>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </ul>\r\n      <button\r\n        className=\"mt-10 p-5 danger-btn\"\r\n        onClick={() => {\r\n          props.dispatch({ type: ACTIONS.RESET });\r\n        }}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"currentColor\"\r\n          className=\"inline w-10 mr-2\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z\"\r\n          />\r\n          <path d=\"M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z\" />\r\n        </svg>\r\n        <span>Reset</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport InputPrompt from \"./components/inputPrompt\";\nimport Zeigerdiagramm from \"./components/zeigerdiagramm\";\nimport SpannungZeitdiagramm from \"./components/spannung-zeitdiagramm\";\nimport SpannungsListe from \"./components/spannungsListe\";\nimport { max as d3max } from \"d3\";\nimport distinctColors from \"distinct-colors\";\n\nvar palette = distinctColors({ count: 100 });\n\nexport const ACTIONS = {\n  ADD_ZEIGER: \"add-zeiger\",\n  SET_FREQUENCY: \"set-frequency\",\n  DELETE_ZEIGER: \"delete-zeiger\",\n  RESET: \"reset\",\n};\n\nfunction App() {\n  const reducer = (prev, action) => {\n    switch (action.type) {\n      case ACTIONS.ADD_ZEIGER:\n        let zeigernrMax = d3max(prev.zeigerarray, (zeiger) => zeiger.nummer);\n        let zeigernummer = zeigernrMax + 1;\n        if (isNaN(zeigernummer)) {\n          zeigernummer = 0;\n        }\n        if (action.payload.type === \"kartesisch\") {\n          // console.log(prev.zeigerarray);\n          let real = action.payload.real;\n          let imaginary = action.payload.imaginary;\n          let absolute = Math.sqrt(real ** 2 + imaginary ** 2);\n          let angle = Math.atan(imaginary / real);\n          if (real > 0 && imaginary < 0) {\n            angle = Math.atan(imaginary / real) + 2 * Math.PI;\n          } else if (real < 0) {\n            angle = Math.atan(imaginary / real) + Math.PI;\n          }\n          return {\n            zeigerarray: [\n              ...prev.zeigerarray,\n              {\n                nummer: zeigernummer,\n                real: real,\n                imaginary: imaginary,\n                absolute: absolute,\n                angle: angle,\n                color: palette[zeigernummer + 1].hex(),\n              },\n            ],\n          };\n        } else if (action.payload.type === \"polar\") {\n          let absolute = parseFloat(action.payload.absolute);\n          let angle = parseFloat(action.payload.angle);\n\n          let imaginary = Math.sin(angle) * absolute;\n          let real = Math.cos(angle) * absolute;\n\n          return {\n            zeigerarray: [\n              ...prev.zeigerarray,\n              {\n                nummer: zeigernummer,\n                real: real,\n                imaginary: imaginary,\n                absolute: absolute,\n                angle: angle,\n                color: palette[zeigernummer].hex(),\n              },\n            ],\n          };\n        }\n        break;\n      case ACTIONS.SET_FREQUENCY:\n        return { ...prev, frequency: action.payload };\n      case ACTIONS.DELETE_ZEIGER:\n        let indexToDelete = undefined;\n        for (let index in prev.zeigerarray) {\n          if (prev.zeigerarray[index].nummer === action.payload) {\n            indexToDelete = index;\n          }\n        }\n        let newZeigerArray = [...prev.zeigerarray];\n        newZeigerArray.splice(indexToDelete, 1);\n        return { ...prev, zeigerarray: newZeigerArray };\n      case ACTIONS.RESET:\n        return {\n          zeigerarray: [],\n          frequenz: undefined,\n        };\n      default:\n        return prev;\n    }\n  };\n  const [store, dispatch] = useReducer(reducer, {\n    zeigerarray: [],\n    frequenz: undefined,\n  });\n\n  return (\n    <>\n      <div className=\"backgroundElement h-full w-full absolute\"></div>\n      <div className=\"App flex flex-col justify-center md:my-10 p-2 md:p-10 relative w-screen md:w-none\">\n        <header>\n          <h1 className=\"text-xl md:text-3xl\">\n            Addition frequenzgleicher Wechselgrößen - Visualisierer\n          </h1>\n        </header>\n        <main>\n          <InputPrompt dispatch={dispatch} />\n          <Zeigerdiagramm store={store} dispatch={dispatch} />\n          <SpannungZeitdiagramm store={store} dispatch={dispatch} />\n          <SpannungsListe store={store} dispatch={dispatch} />\n        </main>\n        <footer>©2021 by Julian Szigethy</footer>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}